---
kind: pipeline
name: default

steps:
  - name: Run rspec
    image: ruby:2.6.5
    environment:
      DATABASE_HOST: database
      RAILS_ENV: test
      VAULT_ADDR: http://vault:8200
    commands:
      - gem update bundler
      - bundle --jobs $(nproc)
      - rake db:create db:migrate
      - rspec spec

  - name: Bump and tag
    image: rubykube/robox:1.0.1
    environment:
      BOT_NAME: Kite
      BOT_EMAIL: kite-bot@heliostech.fr
      BOT_USERNAME: kite-bot
      GITHUB_API_KEY:
        from_secret: kite_bot_key
    commands:
      - push.sh
    when:
      branch:
        - master

  - name: Publish to Gitolite
    image: alpine/git
    environment:
      GITOLITE_KEY:
        from_secret: gitolite_rsa_key_b64
    commands:
      - mkdir -p ~/.ssh
      - echo $GITOLITE_KEY | base64 -d > ~/.ssh/id_rsa
      - chmod 0600 ~/.ssh/id_rsa
      - git remote add gitolite git@git.openware.com:arke
      - GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" git push -f gitolite HEAD:master


  - name: "First Docker build and push"
    image: plugins/gcr
    settings:
      repo:
        from_secret: gcr_repo_first
      json_key:
        from_secret: gcr_creds_base64_first
    when:
      branch:
        - master

  - name: "Second Docker build and push"
    image: plugins/gcr
    settings:
      repo:
        from_secret: gcr_repo_second
      json_key:
        from_secret: gcr_creds_base64_second
    when:
      branch:
        - master

  - name: "Push image to Quay.io"
    image: plugins/docker
    settings:
      username:
        from_secret: quay_username
      password:
        from_secret: quay_password
      repo: quay.io/openware/arke
      registry: quay.io
    when:
      branch:
        - master
        
  - name: "Notify staging"
    image: plugins/slack
    settings:
      webhook:
        from_secret: arke_slack_webhook
      channel:
        from_secret: arke_slack_channel
      template: >
        {{#success build.status}}
          [SUCCESS] (Arke) Branch {{ build.branch }} by {{ build.author }} staging has succeeded!
          Visit https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }} to check it out!
        {{else}}
          [FAILURE] Branch {{ build.branch }} by {{ build.author }} staging has failed!
        {{/success}}
        Check the build info here: {{ build.link }}
    when:
      status: [success, failure]

services:
- name: database
  image: mariadb
  ports:
    - 3306
  environment:
    MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'

- name: vault
  image: vault:0.11.4
  ports:
    - 8200
  environment:
    SKIP_SETCAP: 1
    VAULT_TOKEN: changeme
    VAULT_DEV_ROOT_TOKEN_ID: changeme
    VAULT_ADDR: http://vault:8200

trigger:
  event:
    - push
